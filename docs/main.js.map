{"version":3,"sources":["./src/environments/environment.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/assign-tasks/assign-tasks.component.ts","./src/app/assign-tasks/assign-tasks.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {  FormBuilder, FormGroup, Validators,  } from '@angular/forms';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  ClassifficationSaveForm:FormGroup;\n  yearlist:any=[];\n  monthlist:any=[];\n  \n  viewData:any=[];\n  submitted:any = false;\n  disableshowbutton: any = false;\n  showbutton: any = \"Show\";\n  constructor(private api:ApiService,private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.addyearandmonth();\n\n\n    this.ClassifficationSaveForm = this.formBuilder.group({\n      yearSelect: ['',Validators.required],\n      monthSelect: ['',Validators.required],\n\n    });\n\n  }\n  get f() { return this.ClassifficationSaveForm.controls; }\n\n  addyearandmonth(){\n  \n    for(let i=2010;i<=2019;i++){\n      let data ={\n        year:i\n      }\n      this.yearlist.push(data);\n    }\n    for(let i=1;i<=12;i++){\n      let data ={\n        month:i\n      }\n      this.monthlist.push(data);\n    }\n  \n  console.log(this.yearlist)\n  }\n\n  AddToGrid(){\n    debugger\n    this.viewData =[];\n    this.submitted = true;\n    this.showbutton=\"Processing\";\n    this.disableshowbutton=true;\n\n    if(this.ClassifficationSaveForm.valid){\n\n      let sendData = this.ClassifficationSaveForm.controls.yearSelect.value+\"/\"+this.ClassifficationSaveForm.controls.monthSelect.value;\n\n      let response:any=[];\n      //API Call\n      this.api.getAPI(sendData).subscribe(res =>{\n        debugger\n        response = res\n        console.log(response.response.docs)\n        this.viewData = response.response.docs;\n        this.showbutton=\"Show\";\n        this.disableshowbutton=false;\n      });\n    }    \n    \n    \n   \n\n   \n  }\n\n}\n","<nav class=\"navbar navbar-expand-xl navbar-light bg-primary fixed-top\" id=\"header\">\n    <div class=\"container\">\n        <a class=\"navbar-brand p-0 m-0\">\n            <h2 class=\"m-0 text-white\"><b>SKY TASK </b></h2>\n        </a>\n</div>\n</nav>\n<div class=\"headerbottom\">\n    <div class=\"container mt-3\" >\n         <h1 >API 1 New York Times</h1>\n    </div>\n    <div class=\"container bg-white px-4 mb-5 px-md-5\">\n       \n        <div class=\"row pt-2 pb-3 border-bottom-highlight\">\n           <div class=\"col-md-12 col-xl-8\">\n            <form [formGroup]=\"ClassifficationSaveForm\">\n                <fieldset>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-5 col-xl-5\">\n                           <div class=\"mb-3\">\n                              <label for=\"disabledSelect\" class=\"form-label\">Year</label>\n                              <div class=\"input-group\">\n                                  \n                                <ng-select id=\"yearSelect\"  formControlName=\"yearSelect\" class=\"form-control form-select\" [items]=\"yearlist\"   bindLabel=\"year\" bindValue=\"year\" [multiple]=false placeholder=\"Select Year\" [searchable]=true [clearable]=true dropdownPosition=\"bottom\" [clearOnBackspace]=true\n                                [ngClass]=\"{ 'is-invalid': submitted && f.yearSelect.errors }\"\n                                >\n                               </ng-select>\n                               <div *ngIf=\"submitted && f.yearSelect.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.yearSelect.errors.required\">Classiffication Name is required</div>\n                                </div>\n                              </div>\n                           </div>\n                        </div>\n                        <div class=\"col-sm-12 col-md-5 col-xl-5\">\n                           <div class=\"mb-3\">     \n                              <label for=\"disabledSelect\" class=\"form-label\">Month</label>\n                              <div class=\"input-group\">\n                                \n                                <ng-select id=\"monthSelect\"  formControlName=\"monthSelect\" class=\"form-control form-select\" [items]=\"monthlist\"   bindLabel=\"month\" bindValue=\"month\" [multiple]=false placeholder=\"Select Year\" [searchable]=true [clearable]=true dropdownPosition=\"bottom\" [clearOnBackspace]=true\n                                [ngClass]=\"{ 'is-invalid': submitted && f.monthSelect.errors }\"\n                                >\n                               </ng-select>\n                               <div *ngIf=\"submitted && f.monthSelect.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.monthSelect.errors.required\">Classiffication Name is required</div>\n                                </div>\n                                <button class=\"btn btn-b-icon border-0 mt-1 mr-2\" (click)=\"AddToGrid()\"  [disabled]=\"disableshowbutton\">\n                                    <i class=\"fa\" [ngClass]=\"{'fa-spin fa-spinner': disableshowbutton}\"></i> {{showbutton}}\n                                </button>\n\n\n                              </div>\n\n                           </div>\n                        </div>\n                     </div>\n                   </fieldset>\n              </form>\n           </div>\n           <div class=\"container mt-3\">\n            <div  style='overflow:scroll;'>\n                <div class=\"table-responsive sale-panel\">\n                    <table class=\"table table-bordered \">\n                       <thead>\n                          <tr>\n                             <th scope=\"col\">Section Name</th>\n                             <th scope='col'>Type</th>\n                             <th scope=\"col\">Snippet</th>\n                            \n                          </tr>\n                       </thead>\n                       <tbody>\n                          <tr *ngFor=\"let item of viewData\">\n                             <th scope=\"row\">{{item.section_name}} </th>\n                             <td scope=\"row\">{{item.type_of_material}}</td>\n                             <td class=\"text-primary fw-bold\">{{item.snippet}}</td>\n                           \n                            \n                          </tr>\n                         \n                       </tbody>\n                    </table>\n                 </div>\n                 </div>\n           </div>\n           \n           </div>\n           </div>\n         \n\n\n</div>\n  \n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assign-tasks',\n  templateUrl: './assign-tasks.component.html',\n  styleUrls: ['./assign-tasks.component.css']\n})\nexport class AssignTasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>assign-tasks works!</p>\n<!-- <h1 style=\"color: black;\">API 1</h1> -->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'taskSKY';\n}\n","<app-tasks></app-tasks>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { AssignTasksComponent } from './assign-tasks/assign-tasks.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    AssignTasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAPI(apipath){\n\n    let key =\".json?api-key=Rxx6OS4JovWjwD3jGQHWs8wr8uK7h9Ab\";\n    let url = \"https://api.nytimes.com/svc/archive/v1/\"\n   return this.http.get(url+apipath+key);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}